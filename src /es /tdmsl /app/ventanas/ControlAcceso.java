/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package es.tdmsl.app.ventanas;

import java.awt.*;
import javax.swing.*;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle;
import javax.swing.border.*;
import com.toedter.calendar.*;
import es.tdmsl.app.Principal;
import es.tdmsl.app.beans.ControlHoras;
import es.tdmsl.app.beans.Operario;
import es.tdmsl.app.beans.Personalizacion;
import es.tdmsl.app.dao.ControlHorasDAO;
import es.tdmsl.app.dao.OperarioDAO;
import es.tdmsl.app.dao.PersonalizacionDAO;
import es.tdmsl.app.exceptions.OperarioException;
import es.tdmsl.app.utilidades.Util;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Manu
 */
public class ControlAcceso extends javax.swing.JFrame {

    OperarioDAO operarioDAO;
    ControlHoras controlHoras;
    ControlHorasDAO controlHorasDAO;
    String hora;
    Date inicioMes;
    Date finMes;
    double totMes;
    Calendar c = Calendar.getInstance();
    private PersonalizacionDAO personalizacionDAO;
    private Personalizacion personalizacion;
    private String filejasper;

    public ControlAcceso() {
        try {
            // el crear jDateChooserFecha de lanza el evento jDateChooserFechaPropertyChange
            // que llama al metodo cargaFormulario() 
            operarioDAO = new OperarioDAO();
//            List<Operario> operarios = operarioDAO.creaComboBoxOperarios();
//            System.out.println(operarios);
            initComponents();
            //jDateChooserFecha
            jComboBoxUser.setModel(new DefaultComboBoxModel(operarioDAO.creaComboBoxOperarios()));
            jComboBoxUser.setSelectedIndex(0);
            this.setLocationRelativeTo(null);

        } catch (OperarioException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    // Generated using JFormDesigner non-commercial license
    private void initComponents() {
        jPanel1 = new JPanel();
        jComboBoxUser = new JComboBox();
        jSeparator1 = new JSeparator();
        jDateChooserFecha = new JDateChooser(new Date());
        jPanel2 = new JPanel();
        jPanel5 = new JPanel();
        jLabel2 = new JLabel();
        totalDia = new JTextField();
        jLabel1 = new JLabel();
        totalMes = new JTextField();
        jPanel6 = new JPanel();
        jLabelHora = new JLabel();
        jPanel3 = new JPanel();
        jScrollPaneMov = new JScrollPane();
        jTableMov = new JTable();
        jPanel4 = new JPanel();
        jButtonGrabar = new JButton();
        jButtonImprimir = new JButton();

        //======== this ========
        setTitle("Control de acceso y salida");
        Container contentPane = getContentPane();
        contentPane.setLayout(new BoxLayout(contentPane, BoxLayout.Y_AXIS));

        //======== jPanel1 ========
        {
            jPanel1.setBorder(LineBorder.createBlackLineBorder());
            jPanel1.setPreferredSize(new Dimension(440, 75));
            jPanel1.setLayout(new FlowLayout());

            //---- jComboBoxUser ----
            jComboBoxUser.setBorder(new TitledBorder(new LineBorder(Color.black, 1, true), "Usuario"));
            jComboBoxUser.setMinimumSize(new Dimension(56, 45));
            jComboBoxUser.setPreferredSize(new Dimension(300, 45));
            jComboBoxUser.addActionListener(e -> jComboBoxUserActionPerformed(e));
            jPanel1.add(jComboBoxUser);

            //---- jSeparator1 ----
            jSeparator1.setPreferredSize(new Dimension(10, 2));
            jSeparator1.setRequestFocusEnabled(false);
            jPanel1.add(jSeparator1);

            //---- jDateChooserFecha ----
            jDateChooserFecha.setBorder(new TitledBorder(new LineBorder(Color.black, 1, true), "Fecha"));
            jDateChooserFecha.setPreferredSize(new Dimension(150, 45));
            jDateChooserFecha.addPropertyChangeListener(e -> jDateChooserFechaPropertyChange(e));
            jPanel1.add(jDateChooserFecha);
        }
        contentPane.add(jPanel1);

        //======== jPanel2 ========
        {
            jPanel2.setBorder(LineBorder.createBlackLineBorder());
            jPanel2.setPreferredSize(new Dimension(497, 75));
            jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.X_AXIS));

            //======== jPanel5 ========
            {
                jPanel5.setPreferredSize(new Dimension(150, 133));
                jPanel5.setVerifyInputWhenFocusTarget(false);
                jPanel5.setLayout(new FlowLayout(FlowLayout.LEFT));

                //---- jLabel2 ----
                jLabel2.setText("Total Dia");
                jLabel2.setPreferredSize(new Dimension(125, 14));
                jPanel5.add(jLabel2);

                //---- totalDia ----
                totalDia.setPreferredSize(new Dimension(70, 25));
                jPanel5.add(totalDia);

                //---- jLabel1 ----
                jLabel1.setText("Acumulado mensual");
                jLabel1.setPreferredSize(new Dimension(125, 14));
                jPanel5.add(jLabel1);

                //---- totalMes ----
                totalMes.setPreferredSize(new Dimension(70, 25));
                jPanel5.add(totalMes);
            }
            jPanel2.add(jPanel5);

            //======== jPanel6 ========
            {
                jPanel6.setPreferredSize(new Dimension(200, 72));
                jPanel6.setRequestFocusEnabled(false);

                //---- jLabelHora ----
                jLabelHora.setFont(new Font("Tahoma", Font.PLAIN, 24));
                jLabelHora.setHorizontalAlignment(SwingConstants.CENTER);
                jLabelHora.setText("Hora actual");
                jLabelHora.setBorder(new TitledBorder(new LineBorder(Color.black, 1, true), "Hora"));

                GroupLayout jPanel6Layout = new GroupLayout(jPanel6);
                jPanel6.setLayout(jPanel6Layout);
                jPanel6Layout.setHorizontalGroup(
                    jPanel6Layout.createParallelGroup()
                        .addGroup(jPanel6Layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addComponent(jLabelHora, GroupLayout.PREFERRED_SIZE, 228, GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(21, Short.MAX_VALUE))
                );
                jPanel6Layout.setVerticalGroup(
                    jPanel6Layout.createParallelGroup()
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabelHora, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addContainerGap())
                );
            }
            jPanel2.add(jPanel6);
        }
        contentPane.add(jPanel2);

        //======== jPanel3 ========
        {
            jPanel3.setBorder(LineBorder.createBlackLineBorder());
            jPanel3.setPreferredSize(new Dimension(438, 250));
            jPanel3.setLayout(new FlowLayout());

            //======== jScrollPaneMov ========
            {
                jScrollPaneMov.setBorder(new TitledBorder(LineBorder.createBlackLineBorder(), "Detalle Movimientos"));
                jScrollPaneMov.setPreferredSize(new Dimension(300, 200));

                //---- jTableMov ----
                jTableMov.setModel(new DefaultTableModel(
                    new Object[][] {
                        {null},
                    },
                    new String[] {
                        "Cargando Datos"
                    }
                ));
                jTableMov.setPreferredSize(new Dimension(300, 220));
                jScrollPaneMov.setViewportView(jTableMov);
            }
            jPanel3.add(jScrollPaneMov);

            //======== jPanel4 ========
            {
                jPanel4.setPreferredSize(new Dimension(170, 200));

                //---- jButtonGrabar ----
                jButtonGrabar.setIcon(new ImageIcon(getClass().getResource("/es/tdmsl/app/images/save.png")));
                jButtonGrabar.addActionListener(e -> jButtonGrabarActionPerformed(e));

                //---- jButtonImprimir ----
                jButtonImprimir.setIcon(new ImageIcon(getClass().getResource("/es/tdmsl/app/images/print-icon.png")));
                jButtonImprimir.setMaximumSize(new Dimension(67, 43));
                jButtonImprimir.setMinimumSize(new Dimension(67, 43));
                jButtonImprimir.setPreferredSize(new Dimension(67, 43));
                jButtonImprimir.addActionListener(e -> jButtonImprimirActionPerformed(e));

                GroupLayout jPanel4Layout = new GroupLayout(jPanel4);
                jPanel4.setLayout(jPanel4Layout);
                jPanel4Layout.setHorizontalGroup(
                    jPanel4Layout.createParallelGroup()
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addGap(34, 34, 34)
                            .addComponent(jButtonImprimir, GroupLayout.PREFERRED_SIZE, 51, GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                            .addComponent(jButtonGrabar, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21))
                );
                jPanel4Layout.setVerticalGroup(
                    jPanel4Layout.createParallelGroup()
                        .addGroup(GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                            .addContainerGap(124, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jButtonImprimir, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonGrabar))
                            .addGap(25, 25, 25))
                );
            }
            jPanel3.add(jPanel4);
        }
        contentPane.add(jPanel3);
        pack();
        setLocationRelativeTo(getOwner());
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGrabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGrabarActionPerformed
        try {
            Date entrada = new Date();
            Date salida = new Date();
            //Timestamp entrada = new Timestamp(jDateChooserFecha.getDate().getTime());
            //Timestamp salida =  new Timestamp(jDateChooserFecha.getDate().getTime());    
            controlHoras = new ControlHoras();
            controlHorasDAO = new ControlHorasDAO();
            controlHoras.setIdo(Integer.parseInt(jComboBoxUser.getSelectedItem().toString().substring(0, 2)));
            controlHoras.setFecha(jDateChooserFecha.getDate());
            controlHoras.setEntrada(new Time(new Date().getTime()));
            controlHoras.setSalida(new Time(new Date().getTime()));
            
            System.out.println("new Timw " + new Time(new Date().getTime()));

            controlHorasDAO.grabar(controlHoras);
            dispose();
        } catch (SQLException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonGrabarActionPerformed

    private void jDateChooserFechaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooserFechaPropertyChange
        cargaFormulario();

    }//GEN-LAST:event_jDateChooserFechaPropertyChange

    private void jComboBoxUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxUserActionPerformed
        // TODO add your handling code here:
        cargaFormulario();
    }//GEN-LAST:event_jComboBoxUserActionPerformed

    private void jButtonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImprimirActionPerformed
       Operario operario = (Operario) jComboBoxUser.getSelectedItem();
       Date fecha = jDateChooserFecha.getDate() ;       
        inprimirHoras(operario, fecha);
    }//GEN-LAST:event_jButtonImprimirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlAcceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlAcceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlAcceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlAcceso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        FileInputStream properties = null;
        try {
            Principal.propiedades = new Properties();
            properties = new FileInputStream(Principal.PATH + "\\carpetasExt\\config.properties");
            Principal.propiedades.load(properties);
            properties.close();
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControlAcceso().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // Generated using JFormDesigner non-commercial license
    private JPanel jPanel1;
    private JComboBox jComboBoxUser;
    private JSeparator jSeparator1;
    private JDateChooser jDateChooserFecha;
    private JPanel jPanel2;
    private JPanel jPanel5;
    private JLabel jLabel2;
    private JTextField totalDia;
    private JLabel jLabel1;
    private JTextField totalMes;
    private JPanel jPanel6;
    private JLabel jLabelHora;
    private JPanel jPanel3;
    private JScrollPane jScrollPaneMov;
    private JTable jTableMov;
    private JPanel jPanel4;
    private JButton jButtonGrabar;
    private JButton jButtonImprimir;
    // End of variables declaration//GEN-END:variables

    private void cargaFormulario() {
        try {
            SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss ");
            hora = sdf.format(new Date());
            //           jDateChooserFecha.setDate(new Date());
            jLabelHora.setText(hora);
            if (jComboBoxUser.getSelectedItem() != null) {
                Operario operario = (Operario) jComboBoxUser.getSelectedItem();
                cargarTabla();

//                totalDia.setText(Double.toString(controlHorasDAO.sumaJobs(jDateChooserFecha.getDate())));
               
               // Calendar c = Calendar.getInstance();
                c.setTime(jDateChooserFecha.getDate());
                c.get(Calendar.MONTH);
                c.get(Calendar.YEAR);
                String totalDiaAux = Double.toString(controlHorasDAO.sumaJobs((Date)c.getTime(),(Date)c.getTime(),operario.getIdo()));
                totalDia.setText(Double.toString(controlHorasDAO.sumaJobs((Date)c.getTime(),(Date)c.getTime(),operario.getIdo())));
                System.out.println("Total dia "+(Date)c.getTime()+" "+totalDiaAux); 
                System.out.println("");
                System.out.println("////fin total dia/////");
                System.out.println("Inicio Mes " + (Date)c.getTime() + "\nFinal de Mes" + (Date)c.getTime()+"\nOperario"+operario.getNombre());
                int firstDia = 1;
                int lastDia = c.getActualMaximum(Calendar.DAY_OF_MONTH);
     
                c.set(Calendar.DATE, firstDia);
                //System.out.println("firstDia : "+c.getTime());
                inicioMes = c.getTime();
                System.out.println("firstDia : "+inicioMes);
                
                c.set(Calendar.DATE, lastDia);
                //System.out.println("lastDia : "+c.getTime());
                finMes = c.getTime();
                System.out.println("lastDia : "+finMes);
                totMes = controlHorasDAO.sumaJobs(inicioMes,finMes,operario.getIdo());
                totalMes.setText(Double.toString(totMes));
              
            }
        } catch (SQLException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void cargarTabla() {
        Operario operario;

        try {
            operario = (Operario) jComboBoxUser.getSelectedItem();

            //System.out.println("ope seleccionado: " + operario);

            controlHorasDAO = new ControlHorasDAO();

            Vector<String> nombresColumnas = Util.getCabeceras(ControlHoras.class, "");
            Vector<Vector<Object>> datos = controlHorasDAO.listar(jDateChooserFecha.getDate(), operario.getIdo());
            DefaultTableModel modelo = new DefaultTableModel(datos, nombresColumnas);
            jTableMov.setModel(modelo);
            jTableMov.getColumnModel().getColumn(0).setMinWidth(0);
            jTableMov.getColumnModel().getColumn(0).setMaxWidth(0);
            jTableMov.getColumnModel().getColumn(0).setPreferredWidth(0);

            jTableMov.getColumnModel().getColumn(1).setMinWidth(90);
            jTableMov.getColumnModel().getColumn(1).setMaxWidth(90);
            jTableMov.getColumnModel().getColumn(1).setPreferredWidth(90);

            jTableMov.getColumnModel().getColumn(2).setMinWidth(90);
            jTableMov.getColumnModel().getColumn(2).setMaxWidth(90);
            jTableMov.getColumnModel().getColumn(2).setPreferredWidth(90);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public double redondear(double numero) {
        int decimales = 2;
        return Math.round(numero * Math.pow(10, decimales)) / Math.pow(10, decimales);
    }

    private void inprimirHoras(Operario operario, Date fecha) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd:MM:yyyy");
        // JOptionPane.showMessageDialog(null,"Operario "+operario.getNombre()+"\nFecha "+sdf.format(fecha)); 
        
        try {
           String[] mesesString = {"Enero","Febrero","Marzo","Abril","Mayo","Junio","Julio","Agosto","Septiembre","Octubre","Noviembre","Diciembre"};
           Connection con = Principal.cbdObj.getCon();
            //Determinamos la ruta de los jasper
            personalizacionDAO = new PersonalizacionDAO();
            personalizacion = new Personalizacion();
            personalizacion = personalizacionDAO.cargarDatos(1);
            filejasper = personalizacion.getRutaInformes() + "\\ListadoHoras.jasper";
            //JOptionPane.showMessageDialog(null,"Ruta de los jasper :"+ filejasper);
            //cargamos parametros del reporte (si tiene).
            Map parameters = new HashMap();
            //parameters.put("REPORT_LOCALE",new java.util.Locale("es","CL"));
            parameters.put("SUBREPORT_DIR", personalizacion.getRutaInformes() + "\\");
//            parameters.put("fechaInicio", fechaInicio);
//            parameters.put("fechaFinal", fechaFinal);
            parameters.put("fecha", fecha);
            parameters.put("inicioMes", inicioMes);
            parameters.put("finMes", finMes);
            parameters.put("ido", operario.getIdo());
            parameters.put("mes",  mesesString[c.get(Calendar.MONTH)]);
            parameters.put("totMes", totMes);
            JasperPrint jasperPrint = JasperFillManager.fillReport(filejasper, parameters, con);
            //Guardar el fichero en disco en el formato elegido
            // JasperExportManager.exportReportToPdfFile(jasperPrint, "E:/Informes/Telefonos.pdf"); 
            //Cargar reporte en el visor.
            JasperViewer jasperviewer = new JasperViewer(jasperPrint, false);
           
            //Le ponemos un titulo personalizado al visor, y desplegamos el reporte.
            jasperviewer.setTitle("Reporte Listado Horas Trabajadas");
            jasperviewer.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ControlAcceso.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
